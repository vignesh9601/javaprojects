
import java.awt.Color;
import java.text.*;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vigne
 */
public class LoanAssitant extends javax.swing.JFrame {

    /**
     * Creates new form LoanAssitant
     */
    public LoanAssitant() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        balancelabel = new javax.swing.JLabel();
        balancetext = new javax.swing.JTextField();
        interestbutton = new javax.swing.JLabel();
        interesttext = new javax.swing.JTextField();
        monthslabel = new javax.swing.JLabel();
        monthstext = new javax.swing.JTextField();
        paymentlabel = new javax.swing.JLabel();
        paymenttext = new javax.swing.JTextField();
        monthsbutton = new javax.swing.JButton();
        paymentbutton = new javax.swing.JButton();
        computebutton = new javax.swing.JButton();
        newloanbutton = new javax.swing.JButton();
        loananalysis = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        analysistext = new javax.swing.JTextArea();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Loan Assistant");
        setPreferredSize(new java.awt.Dimension(630, 370));
        setResizable(false);
        setSize(new java.awt.Dimension(630, 370));

        balancelabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        balancelabel.setText("Loan Balance");
        balancelabel.setAlignmentY(0.0F);

        balancetext.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        balancetext.setAlignmentX(1.0F);
        balancetext.setAlignmentY(0.0F);
        balancetext.setPreferredSize(new java.awt.Dimension(100, 25));
        balancetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balancetextActionPerformed(evt);
            }
        });

        interestbutton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        interestbutton.setText("Interest Rate");
        interestbutton.setAlignmentY(1.0F);

        interesttext.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        interesttext.setAlignmentX(1.0F);
        interesttext.setAlignmentY(1.0F);
        interesttext.setPreferredSize(new java.awt.Dimension(100, 25));
        interesttext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interesttextActionPerformed(evt);
            }
        });

        monthslabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        monthslabel.setText("Number of Payments");
        monthslabel.setAlignmentY(2.0F);

        monthstext.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        monthstext.setAlignmentX(1.0F);
        monthstext.setAlignmentY(2.0F);
        monthstext.setPreferredSize(new java.awt.Dimension(100, 25));
        monthstext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthstextActionPerformed(evt);
            }
        });

        paymentlabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        paymentlabel.setText("Monthly Payment");
        paymentlabel.setAlignmentY(3.0F);

        paymenttext.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        paymenttext.setAlignmentX(1.0F);
        paymenttext.setAlignmentY(3.0F);
        paymenttext.setPreferredSize(new java.awt.Dimension(100, 25));
        paymenttext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymenttextActionPerformed(evt);
            }
        });

        monthsbutton.setBackground(new java.awt.Color(153, 204, 255));
        monthsbutton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        monthsbutton.setText("X");
        monthsbutton.setAlignmentX(2.0F);
        monthsbutton.setAlignmentY(2.0F);
        monthsbutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        monthsbutton.setFocusable(false);
        monthsbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthsbuttonActionPerformed(evt);
            }
        });

        paymentbutton.setBackground(new java.awt.Color(102, 204, 255));
        paymentbutton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        paymentbutton.setText("X");
        paymentbutton.setAlignmentY(5.0F);
        paymentbutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        paymentbutton.setFocusable(false);
        paymentbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentbuttonActionPerformed(evt);
            }
        });

        computebutton.setBackground(new java.awt.Color(153, 204, 255));
        computebutton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        computebutton.setText("Compute Monthly Payments");
        computebutton.setAlignmentY(4.0F);
        computebutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        computebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computebuttonActionPerformed(evt);
            }
        });

        newloanbutton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        newloanbutton.setText("New Loan Analysis");
        newloanbutton.setAlignmentY(5.0F);
        newloanbutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        newloanbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newloanbuttonActionPerformed(evt);
            }
        });

        loananalysis.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        loananalysis.setText("Loan Analysis :");
        loananalysis.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        analysistext.setEditable(false);
        analysistext.setColumns(20);
        analysistext.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        analysistext.setRows(5);
        analysistext.setAlignmentX(3.0F);
        analysistext.setAlignmentY(3.0F);
        analysistext.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        analysistext.setFocusable(false);
        analysistext.setPreferredSize(new java.awt.Dimension(250, 150));
        jScrollPane1.setViewportView(analysistext);

        exit.setBackground(new java.awt.Color(153, 204, 255));
        exit.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        exit.setText("Exit");
        exit.setAlignmentX(3.0F);
        exit.setAlignmentY(5.0F);
        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.setFocusable(false);
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(newloanbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(205, 205, 205)
                        .addComponent(exit))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(balancelabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(interestbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(monthslabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(paymentlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(balancetext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(interesttext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(monthstext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(monthsbutton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(paymenttext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(paymentbutton))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(computebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loananalysis, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(419, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(balancelabel)
                            .addComponent(balancetext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(loananalysis)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(interestbutton)
                            .addComponent(interesttext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(monthstext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(monthsbutton))
                            .addComponent(monthslabel))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paymentlabel)
                            .addComponent(paymenttext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paymentbutton))
                        .addGap(18, 18, 18)
                        .addComponent(computebutton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newloanbutton)
                    .addComponent(exit))
                .addContainerGap(197, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public boolean validateDecimalNumber(JTextField tf){

        String s = tf.getText().trim();
        boolean hasDecimal = false;
        boolean valid = true;
        if (s.length() == 0){
           valid = false;
        }
        else{
           for (int i = 0; i < s.length(); i++){
              char c = s.charAt(i);
              if (c >= '0' && c <= '9'){
                continue;
              }
              else if (c == '.' && !hasDecimal){
                hasDecimal = true;
              }
              else{
                valid = false;
              }
            }
        }
        tf.setText(s);
        if (!valid){
           tf.requestFocus();
        }
        return (valid);
    }
    private void computebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computebuttonActionPerformed
        double balance, interest, payment;
        int months;
        double monthlyInterest, multiplier;
        double loanBalance, finalPayment;
        if(validateDecimalNumber(balancetext)){
          balance = Double.valueOf(balancetext.getText()).doubleValue();
        }
        else{
            JOptionPane.showConfirmDialog(null, "Invalid or empty Loan Balance entry.\nPlease correct.", "Balance Input Error", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(validateDecimalNumber(interesttext)){
          interest = Double.valueOf(interesttext.getText()).doubleValue();
        }
        else{
            JOptionPane.showConfirmDialog(null, "Invalid or empty Interest Rate entry.\nPlease correct.", "Interest Input Error", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        monthlyInterest = interest / 1200;
        if(computePayment){                                                        // Computing monthly payment
            if(validateDecimalNumber(monthstext)){
              months = Integer.valueOf(monthstext.getText()).intValue();
            }
            else{
                JOptionPane.showConfirmDialog(null, "Invalid or empty Number of Payments entry.\nPlease correct.", "Number of Payments Input Error", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if(interest == 0){
                payment = balance / months ;
            }
            else{
                multiplier = Math.pow(1 + monthlyInterest, months);
                payment = balance * monthlyInterest * multiplier / (multiplier - 1);
            }
            paymenttext.setText(new DecimalFormat("0.00").format(payment));
        }
        else{                                                                       // computing no.of.payments
            if(validateDecimalNumber(paymenttext)){
               payment = Double.valueOf(paymenttext.getText()).doubleValue();
               if (payment <= (balance * monthlyInterest + 1.0)){
                  if (JOptionPane.showConfirmDialog(null, "Minimum payment must be $" + new DecimalFormat("0.00").format((int)(balance * monthlyInterest + 1.0)) + "\n" + "Do you want to use the minimum payment?", "Input Error", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
                     paymenttext.setText(new DecimalFormat("0.00").format((int)(balance * monthlyInterest + 1.0)));
                     payment = Double.valueOf(paymenttext.getText()).doubleValue();
                    }
                    else{
                     paymenttext.requestFocus();
                     return;
                    }
                }
            }
            else{
                JOptionPane.showConfirmDialog(null, "Invalid or empty Monthly Payment entry.\nPlease correct.", "Payment Input Error", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if( interest == 0){
                months = (int)( balance / payment) ;
            }
            else{
                months = (int)((Math.log(payment) - Math.log(payment - balance * monthlyInterest)) / Math.log(1 + monthlyInterest));
            }
            monthstext.setText(String.valueOf(months));
        }
        
        payment = Double.valueOf(paymenttext.getText()).doubleValue();

        analysistext.setText("Loan Balance: $" + new DecimalFormat("0.00").format(balance));
        analysistext.append("\n" + "Interest Rate: " + new DecimalFormat("0.00").format(interest) + "%");

        loanBalance = balance;
         for (int paymentNumber = 1; paymentNumber <= months - 1; paymentNumber++){
            loanBalance += loanBalance * monthlyInterest - payment;
        }

        finalPayment = loanBalance;
        if (finalPayment > payment){

           loanBalance += loanBalance * monthlyInterest - payment;
           finalPayment = loanBalance;
           months++;
           monthstext.setText(String.valueOf(months));
        }
        analysistext.append("\n\n" + String.valueOf(months - 1) + " Payments of $" + new DecimalFormat("0.00").format(payment));
        analysistext.append("\n" + "Final Payment of: $" + new DecimalFormat("0.00").format(finalPayment));
        analysistext.append("\n" + "Total Payments: $" + new DecimalFormat("0.00").format((months - 1) * payment + finalPayment));
        analysistext.append("\n" + "Interest Paid $" + new DecimalFormat("0.00").format((months - 1) * payment + finalPayment - balance));
        computebutton.setEnabled(false);
        newloanbutton.setEnabled(true);
        newloanbutton.requestFocus();
        
    }//GEN-LAST:event_computebuttonActionPerformed

    private void monthsbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthsbuttonActionPerformed
        
        computePayment = false;
        paymentbutton.setVisible(true);
        monthsbutton.setVisible(false);
        monthstext.setText("");
        monthstext.setFocusable(false);
        monthstext.setEditable(false);
        monthstext.setBackground(lightYellow);
        paymenttext.setEditable(true);
        paymenttext.setBackground(Color.WHITE);
        paymenttext.setFocusable(true);
        computebutton.setText("Compute Number of Payments");
        balancetext.requestFocus();
    }//GEN-LAST:event_monthsbuttonActionPerformed

    private void paymentbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentbuttonActionPerformed
        
        computePayment = true;
        paymentbutton.setVisible(false);
        monthsbutton.setVisible(true);
        monthstext.setEditable(true);
        monthstext.setBackground(Color.WHITE);
        monthstext.setFocusable(true);
        paymenttext.setText("");
        paymenttext.setEditable(false);
        paymenttext.setBackground(lightYellow);
        paymenttext.setFocusable(false);
        computebutton.setText("Compute Monthly Payments");
        balancetext.requestFocus();
    }//GEN-LAST:event_paymentbuttonActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
       System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void newloanbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newloanbuttonActionPerformed
        if (computePayment){
           paymenttext.setText("");
        }
        else{
           monthstext.setText("");
        }
        analysistext.setText("");
        computebutton.setEnabled(true);
        newloanbutton.setEnabled(false);
        balancetext.requestFocus();
    }//GEN-LAST:event_newloanbuttonActionPerformed

    private void balancetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balancetextActionPerformed
        balancetext.transferFocus();
    }//GEN-LAST:event_balancetextActionPerformed

    private void interesttextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interesttextActionPerformed
        interesttext.transferFocus();
    }//GEN-LAST:event_interesttextActionPerformed

    private void monthstextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthstextActionPerformed
        monthstext.transferFocus();
    }//GEN-LAST:event_monthstextActionPerformed

    private void paymenttextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymenttextActionPerformed
       paymenttext.transferFocus();
    }//GEN-LAST:event_paymenttextActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoanAssitant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoanAssitant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoanAssitant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoanAssitant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoanAssitant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea analysistext;
    private javax.swing.JLabel balancelabel;
    private javax.swing.JTextField balancetext;
    private javax.swing.JButton computebutton;
    private javax.swing.JButton exit;
    private javax.swing.JLabel interestbutton;
    private javax.swing.JTextField interesttext;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel loananalysis;
    private javax.swing.JButton monthsbutton;
    private javax.swing.JLabel monthslabel;
    private javax.swing.JTextField monthstext;
    private javax.swing.JButton newloanbutton;
    private javax.swing.JButton paymentbutton;
    private javax.swing.JLabel paymentlabel;
    private javax.swing.JTextField paymenttext;
    // End of variables declaration//GEN-END:variables
    
    Color lightYellow = new Color(255, 255, 128);
    boolean computePayment;

}
